Terminals unused in grammar

   VAL
   ABSTRACT
   AS
   AT
   ATHOME
   ATEACH
   ATOMIC
   CATCH
   CLOCKED
   EXTENDS
   FINAL
   FINALLY
   FINISH
   GOTO
   HASZERO
   HERE
   IMPLEMENTS
   IMPORT
   INSTANCEOF
   INTERFACE
   NATIVE
   MY_NULL
   OFFER
   OFFERS
   OPERATOR
   PACKAGE
   PROPERTY
   SELF
   STATIC
   STRUCT
   SUPER
   THIS
   THROW
   TRANSIENT
   TRY
   VOID
   WHEN
   THEN
   IN
   DO
   ARRAY
   ELLIPSIS
   ASSERT
   NEG
   POW


Grammar

    0 $accept: Defn_or_Decln $end

    1 $@1: /* empty */

    2 Defn_or_Decln: $@1 ClassDeclnList

    3 ClassDeclnList: ClassDeclnList ClassDecln
    4               | ClassDecln

    5 $@2: /* empty */

    6 ClassDecln: Mods CLASS IDENT $@2 ClassBody ';'

    7 Mods: PUBLIC
    8     | PRIVATE
    9     | PROTECTED

   10 $@3: /* empty */

   11 ClassBody: '{' $@3 FuncDefnList '}'

   12 FuncDefnList: FuncDefnList FuncDefn
   13             | FuncDefn

   14 $@4: /* empty */

   15 FuncDefn: DEF IDENT $@4 '(' FormalArgLIST ')' ':' ReturnType CompoundStmt

   16 ReturnType: Type

   17 FormalArgLIST: FormalArgList
   18              | /* empty */

   19 FormalArgList: FormalArgList ',' FormalArg
   20              | FormalArg

   21 $@5: /* empty */

   22 FormalArg: IDENT $@5 ':' Type

   23 StmtList: Stmt
   24         | StmtList Stmt

   25 Stmt: ExpressionStmt
   26     | IterationStmt
   27     | BasicForStmt
   28     | SelectionStmt
   29     | CompoundStmt
   30     | LabeledStmt
   31     | NonFuncDeclaration
   32     | AsyncStmt
   33     | JumpStmt

   34 JumpStmt: CONTINUE ';'
   35         | BREAK ';'
   36         | RETURN ';'
   37         | RETURN Expression ';'

   38 AsyncStmt: ASYNC '{' postfix_Expression ';' '}'

   39 LabeledStmt: CASE ConstExp ':' Stmt
   40            | DEFAULT ':' Stmt

   41 $@6: /* empty */

   42 $@7: /* empty */

   43 CompoundStmt: '{' $@6 StmtList $@7 '}'
   44             | error '}'

   45 NonFuncDeclaration: VarDec

   46 ExpressionStmt: Expression ';'
   47               | ';'
   48               | Expression error ';'
   49               | error ';'

   50 SelectionStmt: IF '(' Expression ')' Stmt
   51              | IF '(' Expression ')' Stmt ELSE Stmt
   52              | SWITCH '(' Expression ')' Stmt

   53 IterationStmt: WHILE '(' Expression ')' Stmt

   54 BasicForStmt: FOR '(' Expression ';' Expression ';' Expression ')' Stmt

   55 ObjCreation: NEW TypeName '(' Expression ')'

   56 TypeName: IDENT

   57 AssOp: EQ
   58      | PLUS_EQ
   59      | MINUS_EQ
   60      | MULT_EQ
   61      | DIV_EQ

   62 VarDec: VAR IdList ':' Type

   63 Type: TYPE_INT
   64     | TYPE_FLOAT
   65     | TYPE_CHAR
   66     | TYPE_BOOL
   67     | TYPE_VOID

   68 IdList: IDENT
   69       | IdList ',' IDENT

   70 primary_Expression: IDENT
   71                   | ConstExp
   72                   | '(' Expression ')'

   73 ConstExp: INTEGER
   74         | FLOAT
   75         | CHAR
   76         | TRUE
   77         | FALSE

   78 Expression: assignment_Expression
   79           | Expression ',' assignment_Expression
   80           | ObjCreation

   81 assignment_Expression: conditional_Expression
   82                      | unary_Expression AssOp assignment_Expression

   83 conditional_Expression: logical_or_Expression
   84                       | logical_or_Expression QM Expression ':' conditional_Expression

   85 logical_or_Expression: logical_and_Expression
   86                      | logical_or_Expression BOOL_OR logical_and_Expression

   87 logical_and_Expression: inclusive_or_Expression
   88                       | logical_and_Expression BOOL_AND inclusive_or_Expression

   89 inclusive_or_Expression: exclusive_or_Expression
   90                        | inclusive_or_Expression BIT_OR exclusive_or_Expression

   91 exclusive_or_Expression: and_Expression
   92                        | exclusive_or_Expression XOR and_Expression

   93 and_Expression: equality_Expression
   94               | and_Expression BIT_AND equality_Expression

   95 equality_Expression: relational_Expression
   96                    | equality_Expression BOOL_EQ relational_Expression
   97                    | equality_Expression NEQ relational_Expression

   98 relational_Expression: shift_Expression
   99                      | relational_Expression LT shift_Expression
  100                      | relational_Expression GT shift_Expression
  101                      | relational_Expression LE shift_Expression
  102                      | relational_Expression GE shift_Expression

  103 shift_Expression: additive_Expression
  104                 | shift_Expression LSH additive_Expression
  105                 | shift_Expression RSH additive_Expression

  106 additive_Expression: multiplicative_Expression
  107                    | additive_Expression PLUS multiplicative_Expression
  108                    | additive_Expression MINUS multiplicative_Expression

  109 multiplicative_Expression: cast_Expression
  110                          | multiplicative_Expression MULT cast_Expression
  111                          | multiplicative_Expression DIV cast_Expression

  112 cast_Expression: unary_Expression

  113 unary_Expression: postfix_Expression
  114                 | PP unary_Expression
  115                 | MM unary_Expression
  116                 | unary_operator cast_Expression

  117 postfix_Expression: primary_Expression
  118                   | postfix_Expression '[' Expression ']'
  119                   | postfix_Expression '(' ArgExpList ')'
  120                   | postfix_Expression '(' ')'
  121                   | postfix_Expression '.' IDENT
  122                   | postfix_Expression PP
  123                   | postfix_Expression MM

  124 ArgExpList: conditional_Expression
  125           | ArgExpList ',' conditional_Expression

  126 unary_operator: PLUS
  127               | MINUS


Terminals, with rules where they appear

$end (0) 0
'(' (40) 15 50 51 52 53 54 55 72 119 120
')' (41) 15 50 51 52 53 54 55 72 119 120
',' (44) 19 69 79 125
'.' (46) 121
':' (58) 15 22 39 40 62 84
';' (59) 6 34 35 36 37 38 46 47 48 49 54
'[' (91) 118
']' (93) 118
'{' (123) 11 38 43
'}' (125) 11 38 43 44
error (256) 44 48 49
VAL (258)
VAR (259) 62
ABSTRACT (260)
AS (261)
ASYNC (262) 38
AT (263)
ATHOME (264)
ATEACH (265)
ATOMIC (266)
BOOL_EQ (267) 96
BOOL_OR (268) 86
BOOL_AND (269) 88
BIT_AND (270) 94
BIT_OR (271) 90
CATCH (272)
CLASS (273) 6
CLOCKED (274)
EXTENDS (275)
FINAL (276)
FINALLY (277)
FINISH (278)
GOTO (279)
HASZERO (280)
HERE (281)
IMPLEMENTS (282)
IMPORT (283)
INSTANCEOF (284)
INTERFACE (285)
LSH (286) 104
NATIVE (287)
NEQ (288) 97
NEW (289) 55
MY_NULL (290)
OFFER (291)
OFFERS (292)
OPERATOR (293)
PACKAGE (294)
PROPERTY (295)
QM (296) 84
RSH (297) 105
SELF (298)
STATIC (299)
STRUCT (300)
SUPER (301)
THIS (302)
THROW (303)
TRANSIENT (304)
TRY (305)
VOID (306)
WHEN (307)
XOR (308) 92
IF (309) 50 51
THEN (310)
ELSE (311) 51
FOR (312) 54
IN (313)
WHILE (314) 53
CONTINUE (315) 34
BREAK (316) 35
DO (317)
SWITCH (318) 52
CASE (319) 39
DEFAULT (320) 40
INTEGER (321) 73
FLOAT (322) 74
CHAR (323) 75
TYPE_INT (324) 63
TYPE_FLOAT (325) 64
TYPE_CHAR (326) 65
TYPE_BOOL (327) 66
TYPE_VOID (328) 67
RETURN (329) 36 37
DEF (330) 15
PUBLIC (331) 7
PRIVATE (332) 8
PROTECTED (333) 9
LT (334) 99
GT (335) 100
LE (336) 101
GE (337) 102
TRUE (338) 76
FALSE (339) 77
IDENT (340) 6 15 22 56 68 69 70 121
ARRAY (341)
ELLIPSIS (342)
ASSERT (343)
EQ (344) 57
PLUS_EQ (345) 58
MULT_EQ (346) 60
MINUS_EQ (347) 59
DIV_EQ (348) 61
PP (349) 114 122
MM (350) 115 123
IFX (351)
MINUS (352) 108 127
PLUS (353) 107 126
DIV (354) 111
MULT (355) 110
NEG (356)
POW (357)


Nonterminals, with rules where they appear

$accept (113)
    on left: 0
Defn_or_Decln (114)
    on left: 2, on right: 0
$@1 (115)
    on left: 1, on right: 2
ClassDeclnList (116)
    on left: 3 4, on right: 2 3
ClassDecln (117)
    on left: 6, on right: 3 4
$@2 (118)
    on left: 5, on right: 6
Mods (119)
    on left: 7 8 9, on right: 6
ClassBody (120)
    on left: 11, on right: 6
$@3 (121)
    on left: 10, on right: 11
FuncDefnList (122)
    on left: 12 13, on right: 11 12
FuncDefn (123)
    on left: 15, on right: 12 13
$@4 (124)
    on left: 14, on right: 15
ReturnType (125)
    on left: 16, on right: 15
FormalArgLIST (126)
    on left: 17 18, on right: 15
FormalArgList (127)
    on left: 19 20, on right: 17 19
FormalArg (128)
    on left: 22, on right: 19 20
$@5 (129)
    on left: 21, on right: 22
StmtList (130)
    on left: 23 24, on right: 24 43
Stmt (131)
    on left: 25 26 27 28 29 30 31 32 33, on right: 23 24 39 40 50 51
    52 53 54
JumpStmt (132)
    on left: 34 35 36 37, on right: 33
AsyncStmt (133)
    on left: 38, on right: 32
LabeledStmt (134)
    on left: 39 40, on right: 30
CompoundStmt (135)
    on left: 43 44, on right: 15 29
$@6 (136)
    on left: 41, on right: 43
$@7 (137)
    on left: 42, on right: 43
NonFuncDeclaration (138)
    on left: 45, on right: 31
ExpressionStmt (139)
    on left: 46 47 48 49, on right: 25
SelectionStmt (140)
    on left: 50 51 52, on right: 28
IterationStmt (141)
    on left: 53, on right: 26
BasicForStmt (142)
    on left: 54, on right: 27
ObjCreation (143)
    on left: 55, on right: 80
TypeName (144)
    on left: 56, on right: 55
AssOp (145)
    on left: 57 58 59 60 61, on right: 82
VarDec (146)
    on left: 62, on right: 45
Type (147)
    on left: 63 64 65 66 67, on right: 16 22 62
IdList (148)
    on left: 68 69, on right: 62 69
primary_Expression (149)
    on left: 70 71 72, on right: 117
ConstExp (150)
    on left: 73 74 75 76 77, on right: 39 71
Expression (151)
    on left: 78 79 80, on right: 37 46 48 50 51 52 53 54 55 72 79 84
    118
assignment_Expression (152)
    on left: 81 82, on right: 78 79 82
conditional_Expression (153)
    on left: 83 84, on right: 81 84 124 125
logical_or_Expression (154)
    on left: 85 86, on right: 83 84 86
logical_and_Expression (155)
    on left: 87 88, on right: 85 86 88
inclusive_or_Expression (156)
    on left: 89 90, on right: 87 88 90
exclusive_or_Expression (157)
    on left: 91 92, on right: 89 90 92
and_Expression (158)
    on left: 93 94, on right: 91 92 94
equality_Expression (159)
    on left: 95 96 97, on right: 93 94 96 97
relational_Expression (160)
    on left: 98 99 100 101 102, on right: 95 96 97 99 100 101 102
shift_Expression (161)
    on left: 103 104 105, on right: 98 99 100 101 102 104 105
additive_Expression (162)
    on left: 106 107 108, on right: 103 104 105 107 108
multiplicative_Expression (163)
    on left: 109 110 111, on right: 106 107 108 110 111
cast_Expression (164)
    on left: 112, on right: 109 110 111 116
unary_Expression (165)
    on left: 113 114 115 116, on right: 82 112 114 115
postfix_Expression (166)
    on left: 117 118 119 120 121 122 123, on right: 38 113 118 119
    120 121 122 123
ArgExpList (167)
    on left: 124 125, on right: 119 125
unary_operator (168)
    on left: 126 127, on right: 116


state 0

    0 $accept: . Defn_or_Decln $end

    $default  reduce using rule 1 ($@1)

    Defn_or_Decln  go to state 1
    $@1            go to state 2


state 1

    0 $accept: Defn_or_Decln . $end

    $end  shift, and go to state 3


state 2

    2 Defn_or_Decln: $@1 . ClassDeclnList

    PUBLIC     shift, and go to state 4
    PRIVATE    shift, and go to state 5
    PROTECTED  shift, and go to state 6

    ClassDeclnList  go to state 7
    ClassDecln      go to state 8
    Mods            go to state 9


state 3

    0 $accept: Defn_or_Decln $end .

    $default  accept


state 4

    7 Mods: PUBLIC .

    $default  reduce using rule 7 (Mods)


state 5

    8 Mods: PRIVATE .

    $default  reduce using rule 8 (Mods)


state 6

    9 Mods: PROTECTED .

    $default  reduce using rule 9 (Mods)


state 7

    2 Defn_or_Decln: $@1 ClassDeclnList .
    3 ClassDeclnList: ClassDeclnList . ClassDecln

    PUBLIC     shift, and go to state 4
    PRIVATE    shift, and go to state 5
    PROTECTED  shift, and go to state 6

    $default  reduce using rule 2 (Defn_or_Decln)

    ClassDecln  go to state 10
    Mods        go to state 9


state 8

    4 ClassDeclnList: ClassDecln .

    $default  reduce using rule 4 (ClassDeclnList)


state 9

    6 ClassDecln: Mods . CLASS IDENT $@2 ClassBody ';'

    CLASS  shift, and go to state 11


state 10

    3 ClassDeclnList: ClassDeclnList ClassDecln .

    $default  reduce using rule 3 (ClassDeclnList)


state 11

    6 ClassDecln: Mods CLASS . IDENT $@2 ClassBody ';'

    IDENT  shift, and go to state 12


state 12

    6 ClassDecln: Mods CLASS IDENT . $@2 ClassBody ';'

    $default  reduce using rule 5 ($@2)

    $@2  go to state 13


state 13

    6 ClassDecln: Mods CLASS IDENT $@2 . ClassBody ';'

    '{'  shift, and go to state 14

    ClassBody  go to state 15


state 14

   11 ClassBody: '{' . $@3 FuncDefnList '}'

    $default  reduce using rule 10 ($@3)

    $@3  go to state 16


state 15

    6 ClassDecln: Mods CLASS IDENT $@2 ClassBody . ';'

    ';'  shift, and go to state 17


state 16

   11 ClassBody: '{' $@3 . FuncDefnList '}'

    DEF  shift, and go to state 18

    FuncDefnList  go to state 19
    FuncDefn      go to state 20


state 17

    6 ClassDecln: Mods CLASS IDENT $@2 ClassBody ';' .

    $default  reduce using rule 6 (ClassDecln)


state 18

   15 FuncDefn: DEF . IDENT $@4 '(' FormalArgLIST ')' ':' ReturnType CompoundStmt

    IDENT  shift, and go to state 21


state 19

   11 ClassBody: '{' $@3 FuncDefnList . '}'
   12 FuncDefnList: FuncDefnList . FuncDefn

    DEF  shift, and go to state 18
    '}'  shift, and go to state 22

    FuncDefn  go to state 23


state 20

   13 FuncDefnList: FuncDefn .

    $default  reduce using rule 13 (FuncDefnList)


state 21

   15 FuncDefn: DEF IDENT . $@4 '(' FormalArgLIST ')' ':' ReturnType CompoundStmt

    $default  reduce using rule 14 ($@4)

    $@4  go to state 24


state 22

   11 ClassBody: '{' $@3 FuncDefnList '}' .

    $default  reduce using rule 11 (ClassBody)


state 23

   12 FuncDefnList: FuncDefnList FuncDefn .

    $default  reduce using rule 12 (FuncDefnList)


state 24

   15 FuncDefn: DEF IDENT $@4 . '(' FormalArgLIST ')' ':' ReturnType CompoundStmt

    '('  shift, and go to state 25


state 25

   15 FuncDefn: DEF IDENT $@4 '(' . FormalArgLIST ')' ':' ReturnType CompoundStmt

    IDENT  shift, and go to state 26

    $default  reduce using rule 18 (FormalArgLIST)

    FormalArgLIST  go to state 27
    FormalArgList  go to state 28
    FormalArg      go to state 29


state 26

   22 FormalArg: IDENT . $@5 ':' Type

    $default  reduce using rule 21 ($@5)

    $@5  go to state 30


state 27

   15 FuncDefn: DEF IDENT $@4 '(' FormalArgLIST . ')' ':' ReturnType CompoundStmt

    ')'  shift, and go to state 31


state 28

   17 FormalArgLIST: FormalArgList .
   19 FormalArgList: FormalArgList . ',' FormalArg

    ','  shift, and go to state 32

    $default  reduce using rule 17 (FormalArgLIST)


state 29

   20 FormalArgList: FormalArg .

    $default  reduce using rule 20 (FormalArgList)


state 30

   22 FormalArg: IDENT $@5 . ':' Type

    ':'  shift, and go to state 33


state 31

   15 FuncDefn: DEF IDENT $@4 '(' FormalArgLIST ')' . ':' ReturnType CompoundStmt

    ':'  shift, and go to state 34


state 32

   19 FormalArgList: FormalArgList ',' . FormalArg

    IDENT  shift, and go to state 26

    FormalArg  go to state 35


state 33

   22 FormalArg: IDENT $@5 ':' . Type

    TYPE_INT    shift, and go to state 36
    TYPE_FLOAT  shift, and go to state 37
    TYPE_CHAR   shift, and go to state 38
    TYPE_BOOL   shift, and go to state 39
    TYPE_VOID   shift, and go to state 40

    Type  go to state 41


state 34

   15 FuncDefn: DEF IDENT $@4 '(' FormalArgLIST ')' ':' . ReturnType CompoundStmt

    TYPE_INT    shift, and go to state 36
    TYPE_FLOAT  shift, and go to state 37
    TYPE_CHAR   shift, and go to state 38
    TYPE_BOOL   shift, and go to state 39
    TYPE_VOID   shift, and go to state 40

    ReturnType  go to state 42
    Type        go to state 43


state 35

   19 FormalArgList: FormalArgList ',' FormalArg .

    $default  reduce using rule 19 (FormalArgList)


state 36

   63 Type: TYPE_INT .

    $default  reduce using rule 63 (Type)


state 37

   64 Type: TYPE_FLOAT .

    $default  reduce using rule 64 (Type)


state 38

   65 Type: TYPE_CHAR .

    $default  reduce using rule 65 (Type)


state 39

   66 Type: TYPE_BOOL .

    $default  reduce using rule 66 (Type)


state 40

   67 Type: TYPE_VOID .

    $default  reduce using rule 67 (Type)


state 41

   22 FormalArg: IDENT $@5 ':' Type .

    $default  reduce using rule 22 (FormalArg)


state 42

   15 FuncDefn: DEF IDENT $@4 '(' FormalArgLIST ')' ':' ReturnType . CompoundStmt

    error  shift, and go to state 44
    '{'    shift, and go to state 45

    CompoundStmt  go to state 46


state 43

   16 ReturnType: Type .

    $default  reduce using rule 16 (ReturnType)


state 44

   44 CompoundStmt: error . '}'

    '}'  shift, and go to state 47


state 45

   43 CompoundStmt: '{' . $@6 StmtList $@7 '}'

    $default  reduce using rule 41 ($@6)

    $@6  go to state 48


state 46

   15 FuncDefn: DEF IDENT $@4 '(' FormalArgLIST ')' ':' ReturnType CompoundStmt .

    $default  reduce using rule 15 (FuncDefn)


state 47

   44 CompoundStmt: error '}' .

    $default  reduce using rule 44 (CompoundStmt)


state 48

   43 CompoundStmt: '{' $@6 . StmtList $@7 '}'

    error     shift, and go to state 49
    VAR       shift, and go to state 50
    ASYNC     shift, and go to state 51
    NEW       shift, and go to state 52
    IF        shift, and go to state 53
    FOR       shift, and go to state 54
    WHILE     shift, and go to state 55
    CONTINUE  shift, and go to state 56
    BREAK     shift, and go to state 57
    SWITCH    shift, and go to state 58
    CASE      shift, and go to state 59
    DEFAULT   shift, and go to state 60
    INTEGER   shift, and go to state 61
    FLOAT     shift, and go to state 62
    CHAR      shift, and go to state 63
    RETURN    shift, and go to state 64
    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ';'       shift, and go to state 67
    '{'       shift, and go to state 45
    '('       shift, and go to state 68
    IDENT     shift, and go to state 69
    PP        shift, and go to state 70
    MM        shift, and go to state 71
    MINUS     shift, and go to state 72
    PLUS      shift, and go to state 73

    StmtList                   go to state 74
    Stmt                       go to state 75
    JumpStmt                   go to state 76
    AsyncStmt                  go to state 77
    LabeledStmt                go to state 78
    CompoundStmt               go to state 79
    NonFuncDeclaration         go to state 80
    ExpressionStmt             go to state 81
    SelectionStmt              go to state 82
    IterationStmt              go to state 83
    BasicForStmt               go to state 84
    ObjCreation                go to state 85
    VarDec                     go to state 86
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 89
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 49

   44 CompoundStmt: error . '}'
   49 ExpressionStmt: error . ';'

    ';'  shift, and go to state 106
    '}'  shift, and go to state 47


state 50

   62 VarDec: VAR . IdList ':' Type

    IDENT  shift, and go to state 107

    IdList  go to state 108


state 51

   38 AsyncStmt: ASYNC . '{' postfix_Expression ';' '}'

    '{'  shift, and go to state 109


state 52

   55 ObjCreation: NEW . TypeName '(' Expression ')'

    IDENT  shift, and go to state 110

    TypeName  go to state 111


state 53

   50 SelectionStmt: IF . '(' Expression ')' Stmt
   51              | IF . '(' Expression ')' Stmt ELSE Stmt

    '('  shift, and go to state 112


state 54

   54 BasicForStmt: FOR . '(' Expression ';' Expression ';' Expression ')' Stmt

    '('  shift, and go to state 113


state 55

   53 IterationStmt: WHILE . '(' Expression ')' Stmt

    '('  shift, and go to state 114


state 56

   34 JumpStmt: CONTINUE . ';'

    ';'  shift, and go to state 115


state 57

   35 JumpStmt: BREAK . ';'

    ';'  shift, and go to state 116


state 58

   52 SelectionStmt: SWITCH . '(' Expression ')' Stmt

    '('  shift, and go to state 117


state 59

   39 LabeledStmt: CASE . ConstExp ':' Stmt

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66

    ConstExp  go to state 118


state 60

   40 LabeledStmt: DEFAULT . ':' Stmt

    ':'  shift, and go to state 119


state 61

   73 ConstExp: INTEGER .

    $default  reduce using rule 73 (ConstExp)


state 62

   74 ConstExp: FLOAT .

    $default  reduce using rule 74 (ConstExp)


state 63

   75 ConstExp: CHAR .

    $default  reduce using rule 75 (ConstExp)


state 64

   36 JumpStmt: RETURN . ';'
   37         | RETURN . Expression ';'

    NEW      shift, and go to state 52
    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    ';'      shift, and go to state 120
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    ObjCreation                go to state 85
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 121
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 65

   76 ConstExp: TRUE .

    $default  reduce using rule 76 (ConstExp)


state 66

   77 ConstExp: FALSE .

    $default  reduce using rule 77 (ConstExp)


state 67

   47 ExpressionStmt: ';' .

    $default  reduce using rule 47 (ExpressionStmt)


state 68

   72 primary_Expression: '(' . Expression ')'

    NEW      shift, and go to state 52
    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    ObjCreation                go to state 85
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 122
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 69

   70 primary_Expression: IDENT .

    $default  reduce using rule 70 (primary_Expression)


state 70

  114 unary_Expression: PP . unary_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression  go to state 87
    ConstExp            go to state 88
    unary_Expression    go to state 123
    postfix_Expression  go to state 104
    unary_operator      go to state 105


state 71

  115 unary_Expression: MM . unary_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression  go to state 87
    ConstExp            go to state 88
    unary_Expression    go to state 124
    postfix_Expression  go to state 104
    unary_operator      go to state 105


state 72

  127 unary_operator: MINUS .

    $default  reduce using rule 127 (unary_operator)


state 73

  126 unary_operator: PLUS .

    $default  reduce using rule 126 (unary_operator)


state 74

   24 StmtList: StmtList . Stmt
   43 CompoundStmt: '{' $@6 StmtList . $@7 '}'

    error     shift, and go to state 49
    VAR       shift, and go to state 50
    ASYNC     shift, and go to state 51
    NEW       shift, and go to state 52
    IF        shift, and go to state 53
    FOR       shift, and go to state 54
    WHILE     shift, and go to state 55
    CONTINUE  shift, and go to state 56
    BREAK     shift, and go to state 57
    SWITCH    shift, and go to state 58
    CASE      shift, and go to state 59
    DEFAULT   shift, and go to state 60
    INTEGER   shift, and go to state 61
    FLOAT     shift, and go to state 62
    CHAR      shift, and go to state 63
    RETURN    shift, and go to state 64
    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ';'       shift, and go to state 67
    '{'       shift, and go to state 45
    '('       shift, and go to state 68
    IDENT     shift, and go to state 69
    PP        shift, and go to state 70
    MM        shift, and go to state 71
    MINUS     shift, and go to state 72
    PLUS      shift, and go to state 73

    '}'  reduce using rule 42 ($@7)

    Stmt                       go to state 125
    JumpStmt                   go to state 76
    AsyncStmt                  go to state 77
    LabeledStmt                go to state 78
    CompoundStmt               go to state 79
    $@7                        go to state 126
    NonFuncDeclaration         go to state 80
    ExpressionStmt             go to state 81
    SelectionStmt              go to state 82
    IterationStmt              go to state 83
    BasicForStmt               go to state 84
    ObjCreation                go to state 85
    VarDec                     go to state 86
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 89
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 75

   23 StmtList: Stmt .

    $default  reduce using rule 23 (StmtList)


state 76

   33 Stmt: JumpStmt .

    $default  reduce using rule 33 (Stmt)


state 77

   32 Stmt: AsyncStmt .

    $default  reduce using rule 32 (Stmt)


state 78

   30 Stmt: LabeledStmt .

    $default  reduce using rule 30 (Stmt)


state 79

   29 Stmt: CompoundStmt .

    $default  reduce using rule 29 (Stmt)


state 80

   31 Stmt: NonFuncDeclaration .

    $default  reduce using rule 31 (Stmt)


state 81

   25 Stmt: ExpressionStmt .

    $default  reduce using rule 25 (Stmt)


state 82

   28 Stmt: SelectionStmt .

    $default  reduce using rule 28 (Stmt)


state 83

   26 Stmt: IterationStmt .

    $default  reduce using rule 26 (Stmt)


state 84

   27 Stmt: BasicForStmt .

    $default  reduce using rule 27 (Stmt)


state 85

   80 Expression: ObjCreation .

    $default  reduce using rule 80 (Expression)


state 86

   45 NonFuncDeclaration: VarDec .

    $default  reduce using rule 45 (NonFuncDeclaration)


state 87

  117 postfix_Expression: primary_Expression .

    $default  reduce using rule 117 (postfix_Expression)


state 88

   71 primary_Expression: ConstExp .

    $default  reduce using rule 71 (primary_Expression)


state 89

   46 ExpressionStmt: Expression . ';'
   48               | Expression . error ';'
   79 Expression: Expression . ',' assignment_Expression

    error  shift, and go to state 127
    ';'    shift, and go to state 128
    ','    shift, and go to state 129


state 90

   78 Expression: assignment_Expression .

    $default  reduce using rule 78 (Expression)


state 91

   81 assignment_Expression: conditional_Expression .

    $default  reduce using rule 81 (assignment_Expression)


state 92

   83 conditional_Expression: logical_or_Expression .
   84                       | logical_or_Expression . QM Expression ':' conditional_Expression
   86 logical_or_Expression: logical_or_Expression . BOOL_OR logical_and_Expression

    BOOL_OR  shift, and go to state 130
    QM       shift, and go to state 131

    $default  reduce using rule 83 (conditional_Expression)


state 93

   85 logical_or_Expression: logical_and_Expression .
   88 logical_and_Expression: logical_and_Expression . BOOL_AND inclusive_or_Expression

    BOOL_AND  shift, and go to state 132

    $default  reduce using rule 85 (logical_or_Expression)


state 94

   87 logical_and_Expression: inclusive_or_Expression .
   90 inclusive_or_Expression: inclusive_or_Expression . BIT_OR exclusive_or_Expression

    BIT_OR  shift, and go to state 133

    $default  reduce using rule 87 (logical_and_Expression)


state 95

   89 inclusive_or_Expression: exclusive_or_Expression .
   92 exclusive_or_Expression: exclusive_or_Expression . XOR and_Expression

    XOR  shift, and go to state 134

    $default  reduce using rule 89 (inclusive_or_Expression)


state 96

   91 exclusive_or_Expression: and_Expression .
   94 and_Expression: and_Expression . BIT_AND equality_Expression

    BIT_AND  shift, and go to state 135

    $default  reduce using rule 91 (exclusive_or_Expression)


state 97

   93 and_Expression: equality_Expression .
   96 equality_Expression: equality_Expression . BOOL_EQ relational_Expression
   97                    | equality_Expression . NEQ relational_Expression

    BOOL_EQ  shift, and go to state 136
    NEQ      shift, and go to state 137

    $default  reduce using rule 93 (and_Expression)


state 98

   95 equality_Expression: relational_Expression .
   99 relational_Expression: relational_Expression . LT shift_Expression
  100                      | relational_Expression . GT shift_Expression
  101                      | relational_Expression . LE shift_Expression
  102                      | relational_Expression . GE shift_Expression

    LT  shift, and go to state 138
    GT  shift, and go to state 139
    LE  shift, and go to state 140
    GE  shift, and go to state 141

    $default  reduce using rule 95 (equality_Expression)


state 99

   98 relational_Expression: shift_Expression .
  104 shift_Expression: shift_Expression . LSH additive_Expression
  105                 | shift_Expression . RSH additive_Expression

    LSH  shift, and go to state 142
    RSH  shift, and go to state 143

    $default  reduce using rule 98 (relational_Expression)


state 100

  103 shift_Expression: additive_Expression .
  107 additive_Expression: additive_Expression . PLUS multiplicative_Expression
  108                    | additive_Expression . MINUS multiplicative_Expression

    MINUS  shift, and go to state 144
    PLUS   shift, and go to state 145

    $default  reduce using rule 103 (shift_Expression)


state 101

  106 additive_Expression: multiplicative_Expression .
  110 multiplicative_Expression: multiplicative_Expression . MULT cast_Expression
  111                          | multiplicative_Expression . DIV cast_Expression

    DIV   shift, and go to state 146
    MULT  shift, and go to state 147

    $default  reduce using rule 106 (additive_Expression)


state 102

  109 multiplicative_Expression: cast_Expression .

    $default  reduce using rule 109 (multiplicative_Expression)


state 103

   82 assignment_Expression: unary_Expression . AssOp assignment_Expression
  112 cast_Expression: unary_Expression .

    EQ        shift, and go to state 148
    PLUS_EQ   shift, and go to state 149
    MULT_EQ   shift, and go to state 150
    MINUS_EQ  shift, and go to state 151
    DIV_EQ    shift, and go to state 152

    $default  reduce using rule 112 (cast_Expression)

    AssOp  go to state 153


state 104

  113 unary_Expression: postfix_Expression .
  118 postfix_Expression: postfix_Expression . '[' Expression ']'
  119                   | postfix_Expression . '(' ArgExpList ')'
  120                   | postfix_Expression . '(' ')'
  121                   | postfix_Expression . '.' IDENT
  122                   | postfix_Expression . PP
  123                   | postfix_Expression . MM

    '('  shift, and go to state 154
    '['  shift, and go to state 155
    PP   shift, and go to state 156
    MM   shift, and go to state 157
    '.'  shift, and go to state 158

    $default  reduce using rule 113 (unary_Expression)


state 105

  116 unary_Expression: unary_operator . cast_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression  go to state 87
    ConstExp            go to state 88
    cast_Expression     go to state 159
    unary_Expression    go to state 160
    postfix_Expression  go to state 104
    unary_operator      go to state 105


state 106

   49 ExpressionStmt: error ';' .

    $default  reduce using rule 49 (ExpressionStmt)


state 107

   68 IdList: IDENT .

    $default  reduce using rule 68 (IdList)


state 108

   62 VarDec: VAR IdList . ':' Type
   69 IdList: IdList . ',' IDENT

    ':'  shift, and go to state 161
    ','  shift, and go to state 162


state 109

   38 AsyncStmt: ASYNC '{' . postfix_Expression ';' '}'

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69

    primary_Expression  go to state 87
    ConstExp            go to state 88
    postfix_Expression  go to state 163


state 110

   56 TypeName: IDENT .

    $default  reduce using rule 56 (TypeName)


state 111

   55 ObjCreation: NEW TypeName . '(' Expression ')'

    '('  shift, and go to state 164


state 112

   50 SelectionStmt: IF '(' . Expression ')' Stmt
   51              | IF '(' . Expression ')' Stmt ELSE Stmt

    NEW      shift, and go to state 52
    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    ObjCreation                go to state 85
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 165
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 113

   54 BasicForStmt: FOR '(' . Expression ';' Expression ';' Expression ')' Stmt

    NEW      shift, and go to state 52
    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    ObjCreation                go to state 85
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 166
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 114

   53 IterationStmt: WHILE '(' . Expression ')' Stmt

    NEW      shift, and go to state 52
    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    ObjCreation                go to state 85
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 167
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 115

   34 JumpStmt: CONTINUE ';' .

    $default  reduce using rule 34 (JumpStmt)


state 116

   35 JumpStmt: BREAK ';' .

    $default  reduce using rule 35 (JumpStmt)


state 117

   52 SelectionStmt: SWITCH '(' . Expression ')' Stmt

    NEW      shift, and go to state 52
    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    ObjCreation                go to state 85
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 168
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 118

   39 LabeledStmt: CASE ConstExp . ':' Stmt

    ':'  shift, and go to state 169


state 119

   40 LabeledStmt: DEFAULT ':' . Stmt

    error     shift, and go to state 49
    VAR       shift, and go to state 50
    ASYNC     shift, and go to state 51
    NEW       shift, and go to state 52
    IF        shift, and go to state 53
    FOR       shift, and go to state 54
    WHILE     shift, and go to state 55
    CONTINUE  shift, and go to state 56
    BREAK     shift, and go to state 57
    SWITCH    shift, and go to state 58
    CASE      shift, and go to state 59
    DEFAULT   shift, and go to state 60
    INTEGER   shift, and go to state 61
    FLOAT     shift, and go to state 62
    CHAR      shift, and go to state 63
    RETURN    shift, and go to state 64
    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ';'       shift, and go to state 67
    '{'       shift, and go to state 45
    '('       shift, and go to state 68
    IDENT     shift, and go to state 69
    PP        shift, and go to state 70
    MM        shift, and go to state 71
    MINUS     shift, and go to state 72
    PLUS      shift, and go to state 73

    Stmt                       go to state 170
    JumpStmt                   go to state 76
    AsyncStmt                  go to state 77
    LabeledStmt                go to state 78
    CompoundStmt               go to state 79
    NonFuncDeclaration         go to state 80
    ExpressionStmt             go to state 81
    SelectionStmt              go to state 82
    IterationStmt              go to state 83
    BasicForStmt               go to state 84
    ObjCreation                go to state 85
    VarDec                     go to state 86
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 89
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 120

   36 JumpStmt: RETURN ';' .

    $default  reduce using rule 36 (JumpStmt)


state 121

   37 JumpStmt: RETURN Expression . ';'
   79 Expression: Expression . ',' assignment_Expression

    ';'  shift, and go to state 171
    ','  shift, and go to state 129


state 122

   72 primary_Expression: '(' Expression . ')'
   79 Expression: Expression . ',' assignment_Expression

    ')'  shift, and go to state 172
    ','  shift, and go to state 129


state 123

  114 unary_Expression: PP unary_Expression .

    $default  reduce using rule 114 (unary_Expression)


state 124

  115 unary_Expression: MM unary_Expression .

    $default  reduce using rule 115 (unary_Expression)


state 125

   24 StmtList: StmtList Stmt .

    $default  reduce using rule 24 (StmtList)


state 126

   43 CompoundStmt: '{' $@6 StmtList $@7 . '}'

    '}'  shift, and go to state 173


state 127

   48 ExpressionStmt: Expression error . ';'

    ';'  shift, and go to state 174


state 128

   46 ExpressionStmt: Expression ';' .

    $default  reduce using rule 46 (ExpressionStmt)


state 129

   79 Expression: Expression ',' . assignment_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    assignment_Expression      go to state 175
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 130

   86 logical_or_Expression: logical_or_Expression BOOL_OR . logical_and_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    logical_and_Expression     go to state 176
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 131

   84 conditional_Expression: logical_or_Expression QM . Expression ':' conditional_Expression

    NEW      shift, and go to state 52
    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    ObjCreation                go to state 85
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 177
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 132

   88 logical_and_Expression: logical_and_Expression BOOL_AND . inclusive_or_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    inclusive_or_Expression    go to state 178
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 133

   90 inclusive_or_Expression: inclusive_or_Expression BIT_OR . exclusive_or_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    exclusive_or_Expression    go to state 179
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 134

   92 exclusive_or_Expression: exclusive_or_Expression XOR . and_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    and_Expression             go to state 180
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 135

   94 and_Expression: and_Expression BIT_AND . equality_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    equality_Expression        go to state 181
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 136

   96 equality_Expression: equality_Expression BOOL_EQ . relational_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    relational_Expression      go to state 182
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 137

   97 equality_Expression: equality_Expression NEQ . relational_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    relational_Expression      go to state 183
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 138

   99 relational_Expression: relational_Expression LT . shift_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    shift_Expression           go to state 184
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 139

  100 relational_Expression: relational_Expression GT . shift_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    shift_Expression           go to state 185
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 140

  101 relational_Expression: relational_Expression LE . shift_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    shift_Expression           go to state 186
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 141

  102 relational_Expression: relational_Expression GE . shift_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    shift_Expression           go to state 187
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 142

  104 shift_Expression: shift_Expression LSH . additive_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    additive_Expression        go to state 188
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 143

  105 shift_Expression: shift_Expression RSH . additive_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    additive_Expression        go to state 189
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 144

  108 additive_Expression: additive_Expression MINUS . multiplicative_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    multiplicative_Expression  go to state 190
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 145

  107 additive_Expression: additive_Expression PLUS . multiplicative_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    multiplicative_Expression  go to state 191
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 146

  111 multiplicative_Expression: multiplicative_Expression DIV . cast_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression  go to state 87
    ConstExp            go to state 88
    cast_Expression     go to state 192
    unary_Expression    go to state 160
    postfix_Expression  go to state 104
    unary_operator      go to state 105


state 147

  110 multiplicative_Expression: multiplicative_Expression MULT . cast_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression  go to state 87
    ConstExp            go to state 88
    cast_Expression     go to state 193
    unary_Expression    go to state 160
    postfix_Expression  go to state 104
    unary_operator      go to state 105


state 148

   57 AssOp: EQ .

    $default  reduce using rule 57 (AssOp)


state 149

   58 AssOp: PLUS_EQ .

    $default  reduce using rule 58 (AssOp)


state 150

   60 AssOp: MULT_EQ .

    $default  reduce using rule 60 (AssOp)


state 151

   59 AssOp: MINUS_EQ .

    $default  reduce using rule 59 (AssOp)


state 152

   61 AssOp: DIV_EQ .

    $default  reduce using rule 61 (AssOp)


state 153

   82 assignment_Expression: unary_Expression AssOp . assignment_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    assignment_Expression      go to state 194
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 154

  119 postfix_Expression: postfix_Expression '(' . ArgExpList ')'
  120                   | postfix_Expression '(' . ')'

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    ')'      shift, and go to state 195
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    conditional_Expression     go to state 196
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    ArgExpList                 go to state 197
    unary_operator             go to state 105


state 155

  118 postfix_Expression: postfix_Expression '[' . Expression ']'

    NEW      shift, and go to state 52
    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    ObjCreation                go to state 85
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 198
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 156

  122 postfix_Expression: postfix_Expression PP .

    $default  reduce using rule 122 (postfix_Expression)


state 157

  123 postfix_Expression: postfix_Expression MM .

    $default  reduce using rule 123 (postfix_Expression)


state 158

  121 postfix_Expression: postfix_Expression '.' . IDENT

    IDENT  shift, and go to state 199


state 159

  116 unary_Expression: unary_operator cast_Expression .

    $default  reduce using rule 116 (unary_Expression)


state 160

  112 cast_Expression: unary_Expression .

    $default  reduce using rule 112 (cast_Expression)


state 161

   62 VarDec: VAR IdList ':' . Type

    TYPE_INT    shift, and go to state 36
    TYPE_FLOAT  shift, and go to state 37
    TYPE_CHAR   shift, and go to state 38
    TYPE_BOOL   shift, and go to state 39
    TYPE_VOID   shift, and go to state 40

    Type  go to state 200


state 162

   69 IdList: IdList ',' . IDENT

    IDENT  shift, and go to state 201


state 163

   38 AsyncStmt: ASYNC '{' postfix_Expression . ';' '}'
  118 postfix_Expression: postfix_Expression . '[' Expression ']'
  119                   | postfix_Expression . '(' ArgExpList ')'
  120                   | postfix_Expression . '(' ')'
  121                   | postfix_Expression . '.' IDENT
  122                   | postfix_Expression . PP
  123                   | postfix_Expression . MM

    ';'  shift, and go to state 202
    '('  shift, and go to state 154
    '['  shift, and go to state 155
    PP   shift, and go to state 156
    MM   shift, and go to state 157
    '.'  shift, and go to state 158


state 164

   55 ObjCreation: NEW TypeName '(' . Expression ')'

    NEW      shift, and go to state 52
    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    ObjCreation                go to state 85
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 203
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 165

   50 SelectionStmt: IF '(' Expression . ')' Stmt
   51              | IF '(' Expression . ')' Stmt ELSE Stmt
   79 Expression: Expression . ',' assignment_Expression

    ')'  shift, and go to state 204
    ','  shift, and go to state 129


state 166

   54 BasicForStmt: FOR '(' Expression . ';' Expression ';' Expression ')' Stmt
   79 Expression: Expression . ',' assignment_Expression

    ';'  shift, and go to state 205
    ','  shift, and go to state 129


state 167

   53 IterationStmt: WHILE '(' Expression . ')' Stmt
   79 Expression: Expression . ',' assignment_Expression

    ')'  shift, and go to state 206
    ','  shift, and go to state 129


state 168

   52 SelectionStmt: SWITCH '(' Expression . ')' Stmt
   79 Expression: Expression . ',' assignment_Expression

    ')'  shift, and go to state 207
    ','  shift, and go to state 129


state 169

   39 LabeledStmt: CASE ConstExp ':' . Stmt

    error     shift, and go to state 49
    VAR       shift, and go to state 50
    ASYNC     shift, and go to state 51
    NEW       shift, and go to state 52
    IF        shift, and go to state 53
    FOR       shift, and go to state 54
    WHILE     shift, and go to state 55
    CONTINUE  shift, and go to state 56
    BREAK     shift, and go to state 57
    SWITCH    shift, and go to state 58
    CASE      shift, and go to state 59
    DEFAULT   shift, and go to state 60
    INTEGER   shift, and go to state 61
    FLOAT     shift, and go to state 62
    CHAR      shift, and go to state 63
    RETURN    shift, and go to state 64
    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ';'       shift, and go to state 67
    '{'       shift, and go to state 45
    '('       shift, and go to state 68
    IDENT     shift, and go to state 69
    PP        shift, and go to state 70
    MM        shift, and go to state 71
    MINUS     shift, and go to state 72
    PLUS      shift, and go to state 73

    Stmt                       go to state 208
    JumpStmt                   go to state 76
    AsyncStmt                  go to state 77
    LabeledStmt                go to state 78
    CompoundStmt               go to state 79
    NonFuncDeclaration         go to state 80
    ExpressionStmt             go to state 81
    SelectionStmt              go to state 82
    IterationStmt              go to state 83
    BasicForStmt               go to state 84
    ObjCreation                go to state 85
    VarDec                     go to state 86
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 89
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 170

   40 LabeledStmt: DEFAULT ':' Stmt .

    $default  reduce using rule 40 (LabeledStmt)


state 171

   37 JumpStmt: RETURN Expression ';' .

    $default  reduce using rule 37 (JumpStmt)


state 172

   72 primary_Expression: '(' Expression ')' .

    $default  reduce using rule 72 (primary_Expression)


state 173

   43 CompoundStmt: '{' $@6 StmtList $@7 '}' .

    $default  reduce using rule 43 (CompoundStmt)


state 174

   48 ExpressionStmt: Expression error ';' .

    $default  reduce using rule 48 (ExpressionStmt)


state 175

   79 Expression: Expression ',' assignment_Expression .

    $default  reduce using rule 79 (Expression)


state 176

   86 logical_or_Expression: logical_or_Expression BOOL_OR logical_and_Expression .
   88 logical_and_Expression: logical_and_Expression . BOOL_AND inclusive_or_Expression

    BOOL_AND  shift, and go to state 132

    $default  reduce using rule 86 (logical_or_Expression)


state 177

   79 Expression: Expression . ',' assignment_Expression
   84 conditional_Expression: logical_or_Expression QM Expression . ':' conditional_Expression

    ':'  shift, and go to state 209
    ','  shift, and go to state 129


state 178

   88 logical_and_Expression: logical_and_Expression BOOL_AND inclusive_or_Expression .
   90 inclusive_or_Expression: inclusive_or_Expression . BIT_OR exclusive_or_Expression

    BIT_OR  shift, and go to state 133

    $default  reduce using rule 88 (logical_and_Expression)


state 179

   90 inclusive_or_Expression: inclusive_or_Expression BIT_OR exclusive_or_Expression .
   92 exclusive_or_Expression: exclusive_or_Expression . XOR and_Expression

    XOR  shift, and go to state 134

    $default  reduce using rule 90 (inclusive_or_Expression)


state 180

   92 exclusive_or_Expression: exclusive_or_Expression XOR and_Expression .
   94 and_Expression: and_Expression . BIT_AND equality_Expression

    BIT_AND  shift, and go to state 135

    $default  reduce using rule 92 (exclusive_or_Expression)


state 181

   94 and_Expression: and_Expression BIT_AND equality_Expression .
   96 equality_Expression: equality_Expression . BOOL_EQ relational_Expression
   97                    | equality_Expression . NEQ relational_Expression

    BOOL_EQ  shift, and go to state 136
    NEQ      shift, and go to state 137

    $default  reduce using rule 94 (and_Expression)


state 182

   96 equality_Expression: equality_Expression BOOL_EQ relational_Expression .
   99 relational_Expression: relational_Expression . LT shift_Expression
  100                      | relational_Expression . GT shift_Expression
  101                      | relational_Expression . LE shift_Expression
  102                      | relational_Expression . GE shift_Expression

    LT  shift, and go to state 138
    GT  shift, and go to state 139
    LE  shift, and go to state 140
    GE  shift, and go to state 141

    $default  reduce using rule 96 (equality_Expression)


state 183

   97 equality_Expression: equality_Expression NEQ relational_Expression .
   99 relational_Expression: relational_Expression . LT shift_Expression
  100                      | relational_Expression . GT shift_Expression
  101                      | relational_Expression . LE shift_Expression
  102                      | relational_Expression . GE shift_Expression

    LT  shift, and go to state 138
    GT  shift, and go to state 139
    LE  shift, and go to state 140
    GE  shift, and go to state 141

    $default  reduce using rule 97 (equality_Expression)


state 184

   99 relational_Expression: relational_Expression LT shift_Expression .
  104 shift_Expression: shift_Expression . LSH additive_Expression
  105                 | shift_Expression . RSH additive_Expression

    LSH  shift, and go to state 142
    RSH  shift, and go to state 143

    $default  reduce using rule 99 (relational_Expression)


state 185

  100 relational_Expression: relational_Expression GT shift_Expression .
  104 shift_Expression: shift_Expression . LSH additive_Expression
  105                 | shift_Expression . RSH additive_Expression

    LSH  shift, and go to state 142
    RSH  shift, and go to state 143

    $default  reduce using rule 100 (relational_Expression)


state 186

  101 relational_Expression: relational_Expression LE shift_Expression .
  104 shift_Expression: shift_Expression . LSH additive_Expression
  105                 | shift_Expression . RSH additive_Expression

    LSH  shift, and go to state 142
    RSH  shift, and go to state 143

    $default  reduce using rule 101 (relational_Expression)


state 187

  102 relational_Expression: relational_Expression GE shift_Expression .
  104 shift_Expression: shift_Expression . LSH additive_Expression
  105                 | shift_Expression . RSH additive_Expression

    LSH  shift, and go to state 142
    RSH  shift, and go to state 143

    $default  reduce using rule 102 (relational_Expression)


state 188

  104 shift_Expression: shift_Expression LSH additive_Expression .
  107 additive_Expression: additive_Expression . PLUS multiplicative_Expression
  108                    | additive_Expression . MINUS multiplicative_Expression

    MINUS  shift, and go to state 144
    PLUS   shift, and go to state 145

    $default  reduce using rule 104 (shift_Expression)


state 189

  105 shift_Expression: shift_Expression RSH additive_Expression .
  107 additive_Expression: additive_Expression . PLUS multiplicative_Expression
  108                    | additive_Expression . MINUS multiplicative_Expression

    MINUS  shift, and go to state 144
    PLUS   shift, and go to state 145

    $default  reduce using rule 105 (shift_Expression)


state 190

  108 additive_Expression: additive_Expression MINUS multiplicative_Expression .
  110 multiplicative_Expression: multiplicative_Expression . MULT cast_Expression
  111                          | multiplicative_Expression . DIV cast_Expression

    DIV   shift, and go to state 146
    MULT  shift, and go to state 147

    $default  reduce using rule 108 (additive_Expression)


state 191

  107 additive_Expression: additive_Expression PLUS multiplicative_Expression .
  110 multiplicative_Expression: multiplicative_Expression . MULT cast_Expression
  111                          | multiplicative_Expression . DIV cast_Expression

    DIV   shift, and go to state 146
    MULT  shift, and go to state 147

    $default  reduce using rule 107 (additive_Expression)


state 192

  111 multiplicative_Expression: multiplicative_Expression DIV cast_Expression .

    $default  reduce using rule 111 (multiplicative_Expression)


state 193

  110 multiplicative_Expression: multiplicative_Expression MULT cast_Expression .

    $default  reduce using rule 110 (multiplicative_Expression)


state 194

   82 assignment_Expression: unary_Expression AssOp assignment_Expression .

    $default  reduce using rule 82 (assignment_Expression)


state 195

  120 postfix_Expression: postfix_Expression '(' ')' .

    $default  reduce using rule 120 (postfix_Expression)


state 196

  124 ArgExpList: conditional_Expression .

    $default  reduce using rule 124 (ArgExpList)


state 197

  119 postfix_Expression: postfix_Expression '(' ArgExpList . ')'
  125 ArgExpList: ArgExpList . ',' conditional_Expression

    ')'  shift, and go to state 210
    ','  shift, and go to state 211


state 198

   79 Expression: Expression . ',' assignment_Expression
  118 postfix_Expression: postfix_Expression '[' Expression . ']'

    ']'  shift, and go to state 212
    ','  shift, and go to state 129


state 199

  121 postfix_Expression: postfix_Expression '.' IDENT .

    $default  reduce using rule 121 (postfix_Expression)


state 200

   62 VarDec: VAR IdList ':' Type .

    $default  reduce using rule 62 (VarDec)


state 201

   69 IdList: IdList ',' IDENT .

    $default  reduce using rule 69 (IdList)


state 202

   38 AsyncStmt: ASYNC '{' postfix_Expression ';' . '}'

    '}'  shift, and go to state 213


state 203

   55 ObjCreation: NEW TypeName '(' Expression . ')'
   79 Expression: Expression . ',' assignment_Expression

    ')'  shift, and go to state 214
    ','  shift, and go to state 129


state 204

   50 SelectionStmt: IF '(' Expression ')' . Stmt
   51              | IF '(' Expression ')' . Stmt ELSE Stmt

    error     shift, and go to state 49
    VAR       shift, and go to state 50
    ASYNC     shift, and go to state 51
    NEW       shift, and go to state 52
    IF        shift, and go to state 53
    FOR       shift, and go to state 54
    WHILE     shift, and go to state 55
    CONTINUE  shift, and go to state 56
    BREAK     shift, and go to state 57
    SWITCH    shift, and go to state 58
    CASE      shift, and go to state 59
    DEFAULT   shift, and go to state 60
    INTEGER   shift, and go to state 61
    FLOAT     shift, and go to state 62
    CHAR      shift, and go to state 63
    RETURN    shift, and go to state 64
    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ';'       shift, and go to state 67
    '{'       shift, and go to state 45
    '('       shift, and go to state 68
    IDENT     shift, and go to state 69
    PP        shift, and go to state 70
    MM        shift, and go to state 71
    MINUS     shift, and go to state 72
    PLUS      shift, and go to state 73

    Stmt                       go to state 215
    JumpStmt                   go to state 76
    AsyncStmt                  go to state 77
    LabeledStmt                go to state 78
    CompoundStmt               go to state 79
    NonFuncDeclaration         go to state 80
    ExpressionStmt             go to state 81
    SelectionStmt              go to state 82
    IterationStmt              go to state 83
    BasicForStmt               go to state 84
    ObjCreation                go to state 85
    VarDec                     go to state 86
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 89
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 205

   54 BasicForStmt: FOR '(' Expression ';' . Expression ';' Expression ')' Stmt

    NEW      shift, and go to state 52
    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    ObjCreation                go to state 85
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 216
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 206

   53 IterationStmt: WHILE '(' Expression ')' . Stmt

    error     shift, and go to state 49
    VAR       shift, and go to state 50
    ASYNC     shift, and go to state 51
    NEW       shift, and go to state 52
    IF        shift, and go to state 53
    FOR       shift, and go to state 54
    WHILE     shift, and go to state 55
    CONTINUE  shift, and go to state 56
    BREAK     shift, and go to state 57
    SWITCH    shift, and go to state 58
    CASE      shift, and go to state 59
    DEFAULT   shift, and go to state 60
    INTEGER   shift, and go to state 61
    FLOAT     shift, and go to state 62
    CHAR      shift, and go to state 63
    RETURN    shift, and go to state 64
    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ';'       shift, and go to state 67
    '{'       shift, and go to state 45
    '('       shift, and go to state 68
    IDENT     shift, and go to state 69
    PP        shift, and go to state 70
    MM        shift, and go to state 71
    MINUS     shift, and go to state 72
    PLUS      shift, and go to state 73

    Stmt                       go to state 217
    JumpStmt                   go to state 76
    AsyncStmt                  go to state 77
    LabeledStmt                go to state 78
    CompoundStmt               go to state 79
    NonFuncDeclaration         go to state 80
    ExpressionStmt             go to state 81
    SelectionStmt              go to state 82
    IterationStmt              go to state 83
    BasicForStmt               go to state 84
    ObjCreation                go to state 85
    VarDec                     go to state 86
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 89
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 207

   52 SelectionStmt: SWITCH '(' Expression ')' . Stmt

    error     shift, and go to state 49
    VAR       shift, and go to state 50
    ASYNC     shift, and go to state 51
    NEW       shift, and go to state 52
    IF        shift, and go to state 53
    FOR       shift, and go to state 54
    WHILE     shift, and go to state 55
    CONTINUE  shift, and go to state 56
    BREAK     shift, and go to state 57
    SWITCH    shift, and go to state 58
    CASE      shift, and go to state 59
    DEFAULT   shift, and go to state 60
    INTEGER   shift, and go to state 61
    FLOAT     shift, and go to state 62
    CHAR      shift, and go to state 63
    RETURN    shift, and go to state 64
    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ';'       shift, and go to state 67
    '{'       shift, and go to state 45
    '('       shift, and go to state 68
    IDENT     shift, and go to state 69
    PP        shift, and go to state 70
    MM        shift, and go to state 71
    MINUS     shift, and go to state 72
    PLUS      shift, and go to state 73

    Stmt                       go to state 218
    JumpStmt                   go to state 76
    AsyncStmt                  go to state 77
    LabeledStmt                go to state 78
    CompoundStmt               go to state 79
    NonFuncDeclaration         go to state 80
    ExpressionStmt             go to state 81
    SelectionStmt              go to state 82
    IterationStmt              go to state 83
    BasicForStmt               go to state 84
    ObjCreation                go to state 85
    VarDec                     go to state 86
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 89
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 208

   39 LabeledStmt: CASE ConstExp ':' Stmt .

    $default  reduce using rule 39 (LabeledStmt)


state 209

   84 conditional_Expression: logical_or_Expression QM Expression ':' . conditional_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    conditional_Expression     go to state 219
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 210

  119 postfix_Expression: postfix_Expression '(' ArgExpList ')' .

    $default  reduce using rule 119 (postfix_Expression)


state 211

  125 ArgExpList: ArgExpList ',' . conditional_Expression

    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    primary_Expression         go to state 87
    ConstExp                   go to state 88
    conditional_Expression     go to state 220
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 160
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 212

  118 postfix_Expression: postfix_Expression '[' Expression ']' .

    $default  reduce using rule 118 (postfix_Expression)


state 213

   38 AsyncStmt: ASYNC '{' postfix_Expression ';' '}' .

    $default  reduce using rule 38 (AsyncStmt)


state 214

   55 ObjCreation: NEW TypeName '(' Expression ')' .

    $default  reduce using rule 55 (ObjCreation)


state 215

   50 SelectionStmt: IF '(' Expression ')' Stmt .
   51              | IF '(' Expression ')' Stmt . ELSE Stmt

    ELSE  shift, and go to state 221

    $default  reduce using rule 50 (SelectionStmt)


state 216

   54 BasicForStmt: FOR '(' Expression ';' Expression . ';' Expression ')' Stmt
   79 Expression: Expression . ',' assignment_Expression

    ';'  shift, and go to state 222
    ','  shift, and go to state 129


state 217

   53 IterationStmt: WHILE '(' Expression ')' Stmt .

    $default  reduce using rule 53 (IterationStmt)


state 218

   52 SelectionStmt: SWITCH '(' Expression ')' Stmt .

    $default  reduce using rule 52 (SelectionStmt)


state 219

   84 conditional_Expression: logical_or_Expression QM Expression ':' conditional_Expression .

    $default  reduce using rule 84 (conditional_Expression)


state 220

  125 ArgExpList: ArgExpList ',' conditional_Expression .

    $default  reduce using rule 125 (ArgExpList)


state 221

   51 SelectionStmt: IF '(' Expression ')' Stmt ELSE . Stmt

    error     shift, and go to state 49
    VAR       shift, and go to state 50
    ASYNC     shift, and go to state 51
    NEW       shift, and go to state 52
    IF        shift, and go to state 53
    FOR       shift, and go to state 54
    WHILE     shift, and go to state 55
    CONTINUE  shift, and go to state 56
    BREAK     shift, and go to state 57
    SWITCH    shift, and go to state 58
    CASE      shift, and go to state 59
    DEFAULT   shift, and go to state 60
    INTEGER   shift, and go to state 61
    FLOAT     shift, and go to state 62
    CHAR      shift, and go to state 63
    RETURN    shift, and go to state 64
    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ';'       shift, and go to state 67
    '{'       shift, and go to state 45
    '('       shift, and go to state 68
    IDENT     shift, and go to state 69
    PP        shift, and go to state 70
    MM        shift, and go to state 71
    MINUS     shift, and go to state 72
    PLUS      shift, and go to state 73

    Stmt                       go to state 223
    JumpStmt                   go to state 76
    AsyncStmt                  go to state 77
    LabeledStmt                go to state 78
    CompoundStmt               go to state 79
    NonFuncDeclaration         go to state 80
    ExpressionStmt             go to state 81
    SelectionStmt              go to state 82
    IterationStmt              go to state 83
    BasicForStmt               go to state 84
    ObjCreation                go to state 85
    VarDec                     go to state 86
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 89
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 222

   54 BasicForStmt: FOR '(' Expression ';' Expression ';' . Expression ')' Stmt

    NEW      shift, and go to state 52
    INTEGER  shift, and go to state 61
    FLOAT    shift, and go to state 62
    CHAR     shift, and go to state 63
    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    '('      shift, and go to state 68
    IDENT    shift, and go to state 69
    PP       shift, and go to state 70
    MM       shift, and go to state 71
    MINUS    shift, and go to state 72
    PLUS     shift, and go to state 73

    ObjCreation                go to state 85
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 224
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 223

   51 SelectionStmt: IF '(' Expression ')' Stmt ELSE Stmt .

    $default  reduce using rule 51 (SelectionStmt)


state 224

   54 BasicForStmt: FOR '(' Expression ';' Expression ';' Expression . ')' Stmt
   79 Expression: Expression . ',' assignment_Expression

    ')'  shift, and go to state 225
    ','  shift, and go to state 129


state 225

   54 BasicForStmt: FOR '(' Expression ';' Expression ';' Expression ')' . Stmt

    error     shift, and go to state 49
    VAR       shift, and go to state 50
    ASYNC     shift, and go to state 51
    NEW       shift, and go to state 52
    IF        shift, and go to state 53
    FOR       shift, and go to state 54
    WHILE     shift, and go to state 55
    CONTINUE  shift, and go to state 56
    BREAK     shift, and go to state 57
    SWITCH    shift, and go to state 58
    CASE      shift, and go to state 59
    DEFAULT   shift, and go to state 60
    INTEGER   shift, and go to state 61
    FLOAT     shift, and go to state 62
    CHAR      shift, and go to state 63
    RETURN    shift, and go to state 64
    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ';'       shift, and go to state 67
    '{'       shift, and go to state 45
    '('       shift, and go to state 68
    IDENT     shift, and go to state 69
    PP        shift, and go to state 70
    MM        shift, and go to state 71
    MINUS     shift, and go to state 72
    PLUS      shift, and go to state 73

    Stmt                       go to state 226
    JumpStmt                   go to state 76
    AsyncStmt                  go to state 77
    LabeledStmt                go to state 78
    CompoundStmt               go to state 79
    NonFuncDeclaration         go to state 80
    ExpressionStmt             go to state 81
    SelectionStmt              go to state 82
    IterationStmt              go to state 83
    BasicForStmt               go to state 84
    ObjCreation                go to state 85
    VarDec                     go to state 86
    primary_Expression         go to state 87
    ConstExp                   go to state 88
    Expression                 go to state 89
    assignment_Expression      go to state 90
    conditional_Expression     go to state 91
    logical_or_Expression      go to state 92
    logical_and_Expression     go to state 93
    inclusive_or_Expression    go to state 94
    exclusive_or_Expression    go to state 95
    and_Expression             go to state 96
    equality_Expression        go to state 97
    relational_Expression      go to state 98
    shift_Expression           go to state 99
    additive_Expression        go to state 100
    multiplicative_Expression  go to state 101
    cast_Expression            go to state 102
    unary_Expression           go to state 103
    postfix_Expression         go to state 104
    unary_operator             go to state 105


state 226

   54 BasicForStmt: FOR '(' Expression ';' Expression ';' Expression ')' Stmt .

    $default  reduce using rule 54 (BasicForStmt)
